pipeline {
    agent any
    tools {
        maven 'maven3'
        jdk 'jdk'
    }
     environment {
        // This can be nexus3 or nexus2
        NEXUS_VERSION = "nexus3"
        // This can be http or https
        NEXUS_PROTOCOL = "http"
        // Where your Nexus is running
        NEXUS_URL = "h2908727.stratoserver.net:8081"
        // Repository where we will upload the artifact
        NEXUS_REPOSITORY = "maven-snapshots"
        // Jenkins credential id to authenticate to Nexus OSS
        NEXUS_CREDENTIAL_ID = "nexus-credentials"
    }
    stages {
        stage ('Initialize') {
            steps {
                sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                    mvn -version
                '''
            }
        }

        stage ('Build') {
            steps {
                sh 'mvn -f projects/org.javacream.books.library/pom.xml package' 
            }
        }

        stage("publish to nexus") {
            steps {
            	dir("projects/org.javacream.books.library"){
	                script {
	                    // Read POM xml file using 'readMavenPom' step , this step 'readMavenPom' is included in: https://plugins.jenkins.io/pipeline-utility-steps
	                    pom = readMavenPom file: "pom.xml";
	                    // Find built artifact under target folder
	                    filesByGlob = findFiles(glob: "target/*.${pom.packaging}");
	                    // Print some info from the artifact found
	                    echo "${filesByGlob[0].name} ${filesByGlob[0].path} ${filesByGlob[0].directory} ${filesByGlob[0].length} ${filesByGlob[0].lastModified}"
	                    // Extract the path from the File found
	                    artifactPath = filesByGlob[0].path;
	                    // Assign to a boolean response verifying If the artifact name exists
	                    artifactExists = fileExists artifactPath;
	
	                    if(artifactExists) {
	                        echo "*** File: ${artifactPath}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}";
	
	                        nexusArtifactUploader(
	                            nexusVersion: NEXUS_VERSION,
	                            protocol: NEXUS_PROTOCOL,
	                            nexusUrl: NEXUS_URL,
	                            groupId: pom.groupId,
	                            version: pom.version,
	                            repository: NEXUS_REPOSITORY,
	                            credentialsId: NEXUS_CREDENTIAL_ID,
	                            artifacts: [
	                                // Artifact generated such as .jar, .ear and .war files.
	                                [artifactId: pom.artifactId,
	                                classifier: '',
	                                file: artifactPath,
	                                type: pom.packaging],
	
	                                // Lets upload the pom.xml file for additional information for Transitive dependencies
	                                [artifactId: pom.artifactId,
	                                classifier: '',
	                                file: "pom.xml",
	                                type: "pom"]
	                            ]
	                        );
	
	                    } else {
	                        error "*** File: ${artifactPath}, could not be found";
	                    }
	                    }
                }
            }
        }   
	}
}